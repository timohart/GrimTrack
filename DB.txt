-- Create the database
CREATE DATABASE IF NOT EXISTS GameTrackingDB;
USE GameTrackingDB;

-- Create the players table
CREATE TABLE Players (
    player_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create the races table
CREATE TABLE Races (
    race_id INT AUTO_INCREMENT PRIMARY KEY,
    race_name VARCHAR(50) NOT NULL UNIQUE
);

-- Create the classes table
CREATE TABLE Classes (
    class_id INT AUTO_INCREMENT PRIMARY KEY,
    class_name VARCHAR(50) NOT NULL UNIQUE
);

-- Create the characters table
CREATE TABLE Characters (
    character_id INT AUTO_INCREMENT PRIMARY KEY,
    player_id INT,
    character_name VARCHAR(50) NOT NULL,
    class_id INT,
    race_id INT,
    copper INT DEFAULT 0,
    silver INT DEFAULT 0,
    gold INT DEFAULT 0,
    ap_earned INT DEFAULT 10,  -- Default to 10 AP
    FOREIGN KEY (player_id) REFERENCES Players(player_id) ON DELETE CASCADE,
    FOREIGN KEY (class_id) REFERENCES Classes(class_id),
    FOREIGN KEY (race_id) REFERENCES Races(race_id)
);

-- Create the items table
CREATE TABLE Items (
    item_id INT AUTO_INCREMENT PRIMARY KEY,
    item_name VARCHAR(100) NOT NULL,
    item_type VARCHAR(50),
    rarity VARCHAR(20)
);

-- Create the character items table (many-to-many relationship between Characters and Items)
CREATE TABLE CharacterItems (
    character_id INT,
    item_id INT,
    quantity INT DEFAULT 1,
    PRIMARY KEY (character_id, item_id),
    FOREIGN KEY (character_id) REFERENCES Characters(character_id) ON DELETE CASCADE,
    FOREIGN KEY (item_id) REFERENCES Items(item_id) ON DELETE CASCADE
);

-- Create the events table
CREATE TABLE Events (
    event_id INT AUTO_INCREMENT PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE,
    location VARCHAR(100),
    ap_reward INT DEFAULT 0  -- AP reward for attending the event
);

-- Create the character events table (many-to-many relationship between Characters and Events)
CREATE TABLE CharacterEvents (
    character_id INT,
    event_id INT,
    PRIMARY KEY (character_id, event_id),
    FOREIGN KEY (character_id) REFERENCES Characters(character_id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES Events(event_id) ON DELETE CASCADE
);

-- Create trigger to update AP when a character attends an event
DELIMITER //

CREATE TRIGGER UpdateAPAfterEvent
AFTER INSERT ON CharacterEvents
FOR EACH ROW
BEGIN
    DECLARE ap_to_add INT;
    SELECT ap_reward INTO ap_to_add FROM Events WHERE event_id = NEW.event_id;
    UPDATE Characters
    SET ap_earned = ap_earned + ap_to_add
    WHERE character_id = NEW.character_id;
END //

DELIMITER ;

-- Example indexes to optimize queries
CREATE INDEX idx_player_username ON Players(username);
CREATE INDEX idx_character_name ON Characters(character_name);
CREATE INDEX idx_item_name ON Items(item_name);
CREATE INDEX idx_event_name ON Events(event_name);
